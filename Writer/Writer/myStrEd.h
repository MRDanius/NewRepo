#pragma once
#include <string>

class myStrEd {
private:
    struct Operation {
        int type;       // 1 - ADD, 2 - DEL
        std::string arg; // Аргумент операции
    };

    struct Node {
        Operation op; // Операция и аргумент
        Node* next;  // Указатель на следующий узел 
    };

    Node* undoStack; // Стек для отмены
    Node* redoStack; // Стек для повтора
    std::string text; // Текущий текст

    void clearStack(Node*& stack); // Очистка стека
    void moveOperation(Node*& from, Node*& to); // Перемещение операции между стеками

public:
    myStrEd();
    ~myStrEd();

    void run(); // Основной интерфейс
    void add(const std::string& s); // Добавление строки
    void del(int n); // Удаление символов
    void undo(); // Отмена
    void redo(); // Повтор
    void print(); // Вывод текста
};


//сделать так, чтобы было два класса один операция и код операции, другой op и указатель на следующие, стеки должны быть реализованы в самом классе текстового редактора; должен быть написан деструктор, переписать интерфейс через getline и парсить по коду операции и и действию. Сам интерфейс должен быть написан не в мейне а в классе
//не надо хранить строку, просто если допустим сначала была операция добавления а потом удаления, ты в удаление передаёшь код команды и аргумент предыдущей операции(то есть добавления)